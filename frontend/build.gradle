plugins {
    id 'java'
    id "com.moowork.node"
}

group 'olaf.cafe'
version '0.0.1-SNAPSHOT'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

node {

    /* gradle-node-plugin configuration

       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md

       Task name pattern:

       ./gradlew npm_<command> Executes an NPM command.

    */

    // Version of node to use.

    version = '10.14.1'

    // Version of npm to use.

    npmVersion = '6.4.1'

    // If true, it will download node using above parameters.

    // If false, it will try to use globally installed node.

    download = true

}

npm_run_build {

    inputs.files fileTree("public")

    inputs.files fileTree("src")

    inputs.file 'package.json'

    inputs.file 'package-lock.json'

    outputs.dir 'build'

}

task packageNpmApp(type: Zip) {

    dependsOn npm_run_build

    baseName 'frontend'

    extension 'jar'

    destinationDir file("${projectDir}/build/libs")

    from('build') {

        // optional path under which output will be visible in Java classpath, e.g. static resources path

        into 'static'

    }

}


configurations {
    npmResources
}

configurations.default.extendsFrom(configurations.npmResources)

artifacts {
    npmResources(packageNpmApp.archivePath) {

        builtBy packageNpmApp

        type "jar"

    }
}


// we extend clean task to remove also jar with frontend
clean {
    delete packageNpmApp.archivePath
}


assemble.dependsOn packageNpmApp

jar.enabled = false
